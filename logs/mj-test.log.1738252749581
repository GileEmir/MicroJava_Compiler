INFO  16:58:01,755 - Compiling source file: C:\Users\Gile\eclipse-workspace\MJCompiler\test\program.mj
INFO  16:58:01,804 - #2 program
INFO  16:58:01,805 - #41 test
INFO  16:58:01,805 - #5 const
INFO  16:58:01,807 - #41 int
INFO  16:58:01,807 - #41 pi
INFO  16:58:01,808 - #6 =
INFO  16:58:01,808 - #42 3
INFO  16:58:01,808 - #8 ,
INFO  16:58:01,810 - #41 g
INFO  16:58:01,810 - #6 =
INFO  16:58:01,810 - #42 11
INFO  16:58:01,810 - #7 ;
INFO  16:58:01,812 - #41 char
INFO  16:58:01,814 - #41 x
INFO  16:58:01,814 - #8 ,
INFO  16:58:01,814 - #41 y
INFO  16:58:01,814 - #9 [
INFO  16:58:01,815 - #10 ]
INFO  16:58:01,815 - #7 ;
INFO  16:58:01,816 - #5 const
INFO  16:58:01,817 - #41 bool
INFO  16:58:01,817 - #41 t
INFO  16:58:01,817 - #6 =
INFO  16:58:01,818 - #43 1
INFO  16:58:01,818 - #7 ;
INFO  16:58:01,818 - #3 {
INFO  16:58:01,818 - #41 int
INFO  16:58:01,819 - #41 square
INFO  16:58:01,819 - #11 (
INFO  16:58:01,819 - #41 int
INFO  16:58:01,819 - #41 a
INFO  16:58:01,820 - #12 )
INFO  16:58:01,821 - #41 int
INFO  16:58:01,822 - #41 x
INFO  16:58:01,823 - #7 ;
INFO  16:58:01,823 - #3 {
INFO  16:58:01,823 - #17 return
INFO  16:58:01,824 - #41 a
INFO  16:58:01,824 - #7 ;
INFO  16:58:01,825 - #4 }
INFO  16:58:01,826 - #13 void
INFO  16:58:01,827 - #41 main
INFO  16:58:01,827 - #11 (
INFO  16:58:01,827 - #12 )
INFO  16:58:01,828 - #41 int
INFO  16:58:01,828 - #41 a
INFO  16:58:01,828 - #8 ,
INFO  16:58:01,829 - #41 b
INFO  16:58:01,829 - #9 [
INFO  16:58:01,829 - #10 ]
INFO  16:58:01,829 - #7 ;
INFO  16:58:01,829 - #41 int
INFO  16:58:01,829 - #41 x
INFO  16:58:01,829 - #9 [
INFO  16:58:01,829 - #10 ]
INFO  16:58:01,829 - #8 ,
INFO  16:58:01,830 - #41 y
INFO  16:58:01,830 - #7 ;
INFO  16:58:01,830 - #41 char
INFO  16:58:01,830 - #41 eol
INFO  16:58:01,830 - #7 ;
INFO  16:58:01,830 - #41 int
INFO  16:58:01,831 - #41 result
INFO  16:58:01,831 - #7 ;
INFO  16:58:01,831 - #3 {
INFO  16:58:01,831 - #41 result
INFO  16:58:01,831 - #6 =
INFO  16:58:01,832 - #41 square
INFO  16:58:01,833 - #27 map
INFO  16:58:01,833 - #41 x
INFO  16:58:01,833 - #7 ;
INFO  16:58:01,833 - #41 a
INFO  16:58:01,834 - #6 =
INFO  16:58:01,834 - #42 3
INFO  16:58:01,834 - #29 +
INFO  16:58:01,834 - #41 b
INFO  16:58:01,835 - #9 [
INFO  16:58:01,836 - #42 2
INFO  16:58:01,836 - #10 ]
INFO  16:58:01,836 - #31 *
INFO  16:58:01,836 - #42 2
INFO  16:58:01,838 - #7 ;
INFO  16:58:01,838 - #41 x
INFO  16:58:01,838 - #6 =
INFO  16:58:01,839 - #40 new
INFO  16:58:01,839 - #41 int
INFO  16:58:01,839 - #9 [
INFO  16:58:01,839 - #42 5
INFO  16:58:01,839 - #10 ]
INFO  16:58:01,839 - #7 ;
INFO  16:58:01,839 - #41 x
INFO  16:58:01,840 - #9 [
INFO  16:58:01,840 - #42 2
INFO  16:58:01,840 - #10 ]
INFO  16:58:01,840 - #6 =
INFO  16:58:01,840 - #41 a
INFO  16:58:01,840 - #7 ;
INFO  16:58:01,840 - #41 x
INFO  16:58:01,840 - #9 [
INFO  16:58:01,840 - #42 3
INFO  16:58:01,840 - #10 ]
INFO  16:58:01,841 - #6 =
INFO  16:58:01,841 - #41 x
INFO  16:58:01,841 - #9 [
INFO  16:58:01,841 - #42 4
INFO  16:58:01,841 - #10 ]
INFO  16:58:01,841 - #7 ;
INFO  16:58:01,841 - #41 x
INFO  16:58:01,841 - #6 =
INFO  16:58:01,841 - #41 null
INFO  16:58:01,842 - #7 ;
INFO  16:58:01,842 - #41 x
INFO  16:58:01,842 - #9 [
INFO  16:58:01,842 - #42 2
INFO  16:58:01,842 - #10 ]
INFO  16:58:01,842 - #23 ++
INFO  16:58:01,842 - #7 ;
INFO  16:58:01,842 - #41 a
INFO  16:58:01,843 - #24 --
INFO  16:58:01,843 - #7 ;
INFO  16:58:01,843 - #21 read
INFO  16:58:01,843 - #11 (
INFO  16:58:01,843 - #41 a
INFO  16:58:01,843 - #12 )
INFO  16:58:01,843 - #7 ;
INFO  16:58:01,843 - #21 read
INFO  16:58:01,844 - #11 (
INFO  16:58:01,844 - #41 eol
INFO  16:58:01,844 - #12 )
INFO  16:58:01,844 - #7 ;
INFO  16:58:01,844 - #21 read
INFO  16:58:01,844 - #11 (
INFO  16:58:01,844 - #41 x
INFO  16:58:01,844 - #9 [
INFO  16:58:01,844 - #42 2
INFO  16:58:01,845 - #10 ]
INFO  16:58:01,845 - #12 )
INFO  16:58:01,845 - #7 ;
INFO  16:58:01,845 - #22 print
INFO  16:58:01,845 - #11 (
INFO  16:58:01,845 - #42 1
INFO  16:58:01,845 - #8 ,
INFO  16:58:01,845 - #42 4
INFO  16:58:01,845 - #12 )
INFO  16:58:01,846 - #7 ;
INFO  16:58:01,846 - #22 print
INFO  16:58:01,846 - #11 (
INFO  16:58:01,846 - #41 a
INFO  16:58:01,846 - #8 ,
INFO  16:58:01,846 - #42 4
INFO  16:58:01,846 - #12 )
INFO  16:58:01,846 - #7 ;
INFO  16:58:01,846 - #22 print
INFO  16:58:01,847 - #11 (
INFO  16:58:01,847 - #41 eol
INFO  16:58:01,847 - #8 ,
INFO  16:58:01,847 - #42 4
INFO  16:58:01,847 - #12 )
INFO  16:58:01,847 - #7 ;
INFO  16:58:01,847 - #22 print
INFO  16:58:01,847 - #11 (
INFO  16:58:01,847 - #43 0
INFO  16:58:01,847 - #8 ,
INFO  16:58:01,848 - #42 4
INFO  16:58:01,848 - #12 )
INFO  16:58:01,848 - #7 ;
INFO  16:58:01,848 - #22 print
INFO  16:58:01,848 - #11 (
INFO  16:58:01,848 - #41 x
INFO  16:58:01,848 - #9 [
INFO  16:58:01,848 - #42 3
INFO  16:58:01,848 - #10 ]
INFO  16:58:01,848 - #8 ,
INFO  16:58:01,849 - #42 4
INFO  16:58:01,849 - #12 )
INFO  16:58:01,849 - #7 ;
INFO  16:58:01,849 - #14 if
INFO  16:58:01,849 - #11 (
INFO  16:58:01,849 - #41 b
INFO  16:58:01,849 - #35 !=
INFO  16:58:01,849 - #41 null
INFO  16:58:01,851 - #12 )
INFO  16:58:01,853 - #41 a
INFO  16:58:01,853 - #23 ++
INFO  16:58:01,853 - #7 ;
INFO  16:58:01,853 - #4 }
INFO  16:58:01,854 - #41 bool
INFO  16:58:01,854 - #41 m1
INFO  16:58:01,854 - #11 (
INFO  16:58:01,854 - #41 int
INFO  16:58:01,854 - #41 fp1
INFO  16:58:01,854 - #8 ,
INFO  16:58:01,854 - #41 char
INFO  16:58:01,854 - #41 fp2
INFO  16:58:01,854 - #9 [
INFO  16:58:01,854 - #10 ]
INFO  16:58:01,854 - #8 ,
INFO  16:58:01,855 - #41 bool
INFO  16:58:01,855 - #41 fp3
INFO  16:58:01,855 - #12 )
INFO  16:58:01,855 - #41 int
INFO  16:58:01,855 - #41 a
INFO  16:58:01,855 - #8 ,
INFO  16:58:01,855 - #41 b
INFO  16:58:01,855 - #9 [
INFO  16:58:01,855 - #10 ]
INFO  16:58:01,855 - #7 ;
INFO  16:58:01,855 - #41 int
INFO  16:58:01,855 - #41 x
INFO  16:58:01,856 - #9 [
INFO  16:58:01,856 - #10 ]
INFO  16:58:01,856 - #8 ,
INFO  16:58:01,856 - #41 y
INFO  16:58:01,856 - #7 ;
INFO  16:58:01,856 - #41 char
INFO  16:58:01,856 - #41 eol
INFO  16:58:01,856 - #7 ;
INFO  16:58:01,856 - #3 {
INFO  16:58:01,856 - #17 return
INFO  16:58:01,856 - #43 0
INFO  16:58:01,856 - #7 ;
INFO  16:58:01,856 - #4 }
INFO  16:58:01,856 - #41 int
INFO  16:58:01,857 - #41 m2
INFO  16:58:01,857 - #11 (
INFO  16:58:01,857 - #12 )
INFO  16:58:01,857 - #41 int
INFO  16:58:01,857 - #41 a
INFO  16:58:01,857 - #7 ;
INFO  16:58:01,857 - #41 bool
INFO  16:58:01,857 - #41 b
INFO  16:58:01,857 - #7 ;
INFO  16:58:01,857 - #3 {
INFO  16:58:01,857 - #17 return
INFO  16:58:01,857 - #42 2
INFO  16:58:01,857 - #7 ;
INFO  16:58:01,858 - #19 do
INFO  16:58:01,858 - #3 {
INFO  16:58:01,858 - #16 break
INFO  16:58:01,858 - #7 ;
INFO  16:58:01,858 - #18 continue
INFO  16:58:01,859 - #7 ;
INFO  16:58:01,859 - #19 do
INFO  16:58:01,860 - #3 {
INFO  16:58:01,860 - #16 break
INFO  16:58:01,860 - #7 ;
INFO  16:58:01,860 - #4 }
INFO  16:58:01,860 - #20 while
INFO  16:58:01,860 - #11 (
INFO  16:58:01,860 - #43 1
INFO  16:58:01,860 - #12 )
INFO  16:58:01,860 - #7 ;
INFO  16:58:01,861 - #16 break
INFO  16:58:01,861 - #7 ;
INFO  16:58:01,861 - #18 continue
INFO  16:58:01,861 - #7 ;
INFO  16:58:01,861 - #4 }
INFO  16:58:01,861 - #20 while
INFO  16:58:01,861 - #11 (
INFO  16:58:01,861 - #43 1
INFO  16:58:01,862 - #12 )
INFO  16:58:01,862 - #7 ;
INFO  16:58:01,862 - #41 square
INFO  16:58:01,862 - #11 (
INFO  16:58:01,862 - #42 6
INFO  16:58:01,862 - #12 )
INFO  16:58:01,863 - #7 ;
INFO  16:58:01,864 - #14 if
INFO  16:58:01,864 - #11 (
INFO  16:58:01,864 - #43 1
INFO  16:58:01,864 - #26 &&
INFO  16:58:01,864 - #41 a
INFO  16:58:01,864 - #34 ==
INFO  16:58:01,864 - #42 2
INFO  16:58:01,865 - #25 ||
INFO  16:58:01,865 - #41 b
INFO  16:58:01,866 - #26 &&
INFO  16:58:01,866 - #41 a
INFO  16:58:01,866 - #38 <
INFO  16:58:01,866 - #42 2
INFO  16:58:01,867 - #12 )
INFO  16:58:01,867 - #41 a
INFO  16:58:01,867 - #23 ++
INFO  16:58:01,867 - #7 ;
INFO  16:58:01,867 - #4 }
INFO  16:58:01,867 - #41 int
INFO  16:58:01,867 - #41 f1
INFO  16:58:01,867 - #11 (
INFO  16:58:01,868 - #41 int
INFO  16:58:01,868 - #41 x
INFO  16:58:01,868 - #12 )
INFO  16:58:01,868 - #3 {
INFO  16:58:01,868 - #17 return
INFO  16:58:01,868 - #41 x
INFO  16:58:01,868 - #7 ;
INFO  16:58:01,868 - #4 }
INFO  16:58:01,868 - #41 int
INFO  16:58:01,868 - #41 f2
INFO  16:58:01,868 - #11 (
INFO  16:58:01,868 - #41 int
INFO  16:58:01,868 - #41 x
INFO  16:58:01,868 - #8 ,
INFO  16:58:01,868 - #41 bool
INFO  16:58:01,868 - #41 b
INFO  16:58:01,868 - #8 ,
INFO  16:58:01,869 - #41 char
INFO  16:58:01,869 - #41 c
INFO  16:58:01,869 - #12 )
INFO  16:58:01,869 - #41 int
INFO  16:58:01,869 - #41 a
INFO  16:58:01,869 - #7 ;
INFO  16:58:01,870 - #3 {
INFO  16:58:01,870 - #17 return
INFO  16:58:01,870 - #41 f1
INFO  16:58:01,870 - #11 (
INFO  16:58:01,870 - #41 x
INFO  16:58:01,870 - #12 )
INFO  16:58:01,870 - #29 +
INFO  16:58:01,870 - #41 a
INFO  16:58:01,870 - #29 +
INFO  16:58:01,870 - #42 1
INFO  16:58:01,871 - #7 ;
INFO  16:58:01,871 - #4 }
INFO  16:58:01,871 - #41 int
INFO  16:58:01,871 - #41 f3
INFO  16:58:01,871 - #11 (
INFO  16:58:01,871 - #12 )
INFO  16:58:01,871 - #3 {
INFO  16:58:01,871 - #41 f2
INFO  16:58:01,871 - #11 (
INFO  16:58:01,871 - #41 f2
INFO  16:58:01,871 - #11 (
INFO  16:58:01,871 - #42 3
INFO  16:58:01,871 - #8 ,
INFO  16:58:01,871 - #43 1
INFO  16:58:01,871 - #8 ,
INFO  16:58:01,871 - #44 a
INFO  16:58:01,872 - #12 )
INFO  16:58:01,872 - #8 ,
INFO  16:58:01,872 - #43 0
INFO  16:58:01,872 - #8 ,
INFO  16:58:01,872 - #44 b
INFO  16:58:01,872 - #12 )
INFO  16:58:01,872 - #7 ;
INFO  16:58:01,872 - #17 return
INFO  16:58:01,873 - #42 1
INFO  16:58:01,873 - #7 ;
INFO  16:58:01,873 - #4 }
INFO  16:58:01,873 - #4 }
INFO  16:58:01,879 - =====================================================================
INFO  16:58:01,880 - Parsiranje uspesno zavrseno!
