// generated with ast extension for cup
// version 0.8
// 17/8/2025 19:54:8


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(FactorElement FactorElement);
    public void visit(Mulop Mulop);
    public void visit(FormParList FormParList);
    public void visit(Constant Constant);
    public void visit(Relop Relop);
    public void visit(ActParList ActParList);
    public void visit(MulopFactorList MulopFactorList);
    public void visit(CondTermList CondTermList);
    public void visit(StatementList StatementList);
    public void visit(ConstVarDeclList ConstVarDeclList);
    public void visit(FormParMore FormParMore);
    public void visit(Addop Addop);
    public void visit(ActParMore ActParMore);
    public void visit(Factor Factor);
    public void visit(CondFactList CondFactList);
    public void visit(Designator Designator);
    public void visit(VarDeclListRec VarDeclListRec);
    public void visit(ConstDeclList ConstDeclList);
    public void visit(Label Label);
    public void visit(ElseStatement ElseStatement);
    public void visit(MethodReturnAndName MethodReturnAndName);
    public void visit(VarDeclList VarDeclList);
    public void visit(Expr Expr);
    public void visit(ConstDeclMore ConstDeclMore);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(VarDeclMore VarDeclMore);
    public void visit(DesignatorArrayName DesignatorArrayName);
    public void visit(CondFact CondFact);
    public void visit(FormPar FormPar);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(AddopTermList AddopTermList);
    public void visit(Setop Setop);
    public void visit(Relop_le Relop_le);
    public void visit(Relop_lt Relop_lt);
    public void visit(Relop_ge Relop_ge);
    public void visit(Relop_gt Relop_gt);
    public void visit(Relop_ne Relop_ne);
    public void visit(Relop_eq Relop_eq);
    public void visit(Mulop_rem Mulop_rem);
    public void visit(Mulop_div Mulop_div);
    public void visit(Mulop_mul Mulop_mul);
    public void visit(Addop_minus Addop_minus);
    public void visit(Addop_plus Addop_plus);
    public void visit(Assignop Assignop);
    public void visit(LabelDerived1 LabelDerived1);
    public void visit(DesignatorArrayName_global DesignatorArrayName_global);
    public void visit(DesignatorArrayName_local DesignatorArrayName_local);
    public void visit(Designator_elem Designator_elem);
    public void visit(Designator_var_global Designator_var_global);
    public void visit(Designator_var Designator_var);
    public void visit(FactorElement_expr FactorElement_expr);
    public void visit(FactorElement_new_record FactorElement_new_record);
    public void visit(FactorElement_new_array FactorElement_new_array);
    public void visit(FactorElement_bool FactorElement_bool);
    public void visit(FactorElement_character FactorElement_character);
    public void visit(FactorElement_number FactorElement_number);
    public void visit(FactorElement_method FactorElement_method);
    public void visit(FactorElement_var FactorElement_var);
    public void visit(Factor_plus Factor_plus);
    public void visit(Factor_minus Factor_minus);
    public void visit(MulopFactorList_factor MulopFactorList_factor);
    public void visit(MulopFactorList_mul MulopFactorList_mul);
    public void visit(Term Term);
    public void visit(AddopTermList_term AddopTermList_term);
    public void visit(AddopTermList_add AddopTermList_add);
    public void visit(Expr_designator Expr_designator);
    public void visit(Expr_addop Expr_addop);
    public void visit(ActPar ActPar);
    public void visit(ActParMore_empty ActParMore_empty);
    public void visit(ActParMore_recursive ActParMore_recursive);
    public void visit(ActParListBegin ActParListBegin);
    public void visit(ActParList_e ActParList_e);
    public void visit(ActParList_recursive ActParList_recursive);
    public void visit(DesignatorStatement_decr DesignatorStatement_decr);
    public void visit(DesignatorStatement_incr DesignatorStatement_incr);
    public void visit(DesignatorStatement_assign_designator DesignatorStatement_assign_designator);
    public void visit(DesignatorStatement_meth DesignatorStatement_meth);
    public void visit(DesignatorStatement_error DesignatorStatement_error);
    public void visit(DesignatorStatement_assign DesignatorStatement_assign);
    public void visit(CondFact_expr_r_expr CondFact_expr_r_expr);
    public void visit(CondFact_expr CondFact_expr);
    public void visit(CondFactList_cf CondFactList_cf);
    public void visit(CondFactList_and CondFactList_and);
    public void visit(CondTerm CondTerm);
    public void visit(CondTermList_ct CondTermList_ct);
    public void visit(CondTermList_or CondTermList_or);
    public void visit(Condition Condition);
    public void visit(Else Else);
    public void visit(ElseStatement_empty ElseStatement_empty);
    public void visit(ElseStatement_else ElseStatement_else);
    public void visit(DoNonTerm DoNonTerm);
    public void visit(WhileNonTerm WhileNonTerm);
    public void visit(For For);
    public void visit(ForJump ForJump);
    public void visit(JumpToForStatement JumpToForStatement);
    public void visit(SemiFor SemiFor);
    public void visit(Rparen Rparen);
    public void visit(Statement_for Statement_for);
    public void visit(Statement_block Statement_block);
    public void visit(Statement_do_condition_designator Statement_do_condition_designator);
    public void visit(Statement_do_condition Statement_do_condition);
    public void visit(Statement_do_empty Statement_do_empty);
    public void visit(Statement_print_number Statement_print_number);
    public void visit(Statement_print Statement_print);
    public void visit(Statement_read Statement_read);
    public void visit(Statement_return_expr Statement_return_expr);
    public void visit(Statement_return_void Statement_return_void);
    public void visit(Statement_continue Statement_continue);
    public void visit(Statement_break Statement_break);
    public void visit(Statement_if_error Statement_if_error);
    public void visit(Statement_if Statement_if);
    public void visit(Statement_designator Statement_designator);
    public void visit(StatementList_empty StatementList_empty);
    public void visit(StatementList_recursive StatementList_recursive);
    public void visit(FormPar_error FormPar_error);
    public void visit(FormPar_array FormPar_array);
    public void visit(FormPar_var FormPar_var);
    public void visit(FormParMore_empty FormParMore_empty);
    public void visit(FormParMore_recursive FormParMore_recursive);
    public void visit(FormParList_empty FormParList_empty);
    public void visit(FormParList_recursive FormParList_recursive);
    public void visit(VarDeclListRec_e VarDeclListRec_e);
    public void visit(VarDeclListRec_recursive VarDeclListRec_recursive);
    public void visit(MethodReturnAndName_void MethodReturnAndName_void);
    public void visit(MethodReturnAndName_type MethodReturnAndName_type);
    public void visit(MethodSignature MethodSignature);
    public void visit(MethodDecl MethodDecl);
    public void visit(MethodDeclList_e MethodDeclList_e);
    public void visit(MethodDeclList_recursive MethodDeclList_recursive);
    public void visit(Type Type);
    public void visit(VarDeclMore_empty VarDeclMore_empty);
    public void visit(VarDeclMore_comma VarDeclMore_comma);
    public void visit(VarDecl_array VarDecl_array);
    public void visit(VarDecl_var VarDecl_var);
    public void visit(VarDeclList_normal VarDeclList_normal);
    public void visit(Constant_bool Constant_bool);
    public void visit(Constant_char Constant_char);
    public void visit(Constant_number Constant_number);
    public void visit(ConstDeclMore_empty ConstDeclMore_empty);
    public void visit(ConstDeclMore_comma ConstDeclMore_comma);
    public void visit(ConstDecl ConstDecl);
    public void visit(ConstDeclList_error ConstDeclList_error);
    public void visit(ConstDeclList_normal ConstDeclList_normal);
    public void visit(ConstVarDeclList_empty ConstVarDeclList_empty);
    public void visit(ConstVarDeclList_var ConstVarDeclList_var);
    public void visit(ConstVarDeclList_const ConstVarDeclList_const);
    public void visit(ProgramName ProgramName);
    public void visit(Program Program);

}
